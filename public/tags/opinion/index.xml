<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>opinion on Jef Claes</title>
    <link>http://localhost:1313/tags/opinion/</link>
    <description>Recent content in opinion on Jef Claes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Jan 2017 15:08:00 +0100</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/opinion/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Everyone has to serve somebody, but software has to serve more than one</title>
      <link>http://localhost:1313/2017/01/gotta-serve-somebody-or-somebodies.html</link>
      <pubDate>Fri, 13 Jan 2017 15:08:00 +0100</pubDate>
      
      <guid>http://localhost:1313/2017/01/gotta-serve-somebody-or-somebodies.html</guid>
      <description>When people get paid to write software, we very often find some form of friction between the people that build the software and those that pay to have it built.
The company I joined three years ago was no exception. When I joined, they had just launched three months ago, weren&amp;rsquo;t seeing any return on investment and prospects weren&amp;rsquo;t too bright either.
I won&amp;rsquo;t lie, that first year was quite stressful.</description>
    </item>
    
    <item>
      <title>Side by side</title>
      <link>http://localhost:1313/2015/02/side-by-side.html</link>
      <pubDate>Sun, 15 Feb 2015 17:34:00 +0100</pubDate>
      
      <guid>http://localhost:1313/2015/02/side-by-side.html</guid>
      <description>This week marked my first year at my current employer. While that event went by rather silently, one year in, a few of my observations are finally shaping up to be cast into writing.
Where I used to work in the typical battery cage, I&amp;rsquo;m now part of a team of just four people, having the luxury of a big dedicated room to ourselves - a whole floor actually. The room is set up almost symmetrically; two desks on one side of the room and two more on the other side, with quite some space in between.</description>
    </item>
    
    <item>
      <title>TDD as the crack cocaine of software</title>
      <link>http://localhost:1313/2014/12/tdd-as-crack-cocaine-of-software.html</link>
      <pubDate>Sun, 28 Dec 2014 17:29:00 +0100</pubDate>
      
      <guid>http://localhost:1313/2014/12/tdd-as-crack-cocaine-of-software.html</guid>
      <description>The psychologist Mihaly Csikszentmihalyi popularized the term &amp;ldquo;flow&amp;rdquo; to describe states of absorption in which attention is so narrowly focused on an activity that a sense of time fades, along with the troubles and concerns of day-to-day life. &amp;ldquo;Flow provides an escape from the chaos of the quotidian,&amp;rdquo; he wrote.  This is a snippet from the highly recommended book Addiction by Design, which not only gives you an incredibly complete overview of the gambling industry, but also insights into the human psyche which apply far outside the domain of gambling.</description>
    </item>
    
    <item>
      <title>Solomon, the architect</title>
      <link>http://localhost:1313/2014/08/solomon-architect.html</link>
      <pubDate>Tue, 26 Aug 2014 19:52:00 +0200</pubDate>
      
      <guid>http://localhost:1313/2014/08/solomon-architect.html</guid>
      <description>Two junior developers who started working for the company at the same time, had been quite competitive with each other from the get-go. They had once been assigned to the same team, but because of the constant bickering, which had put a serious amount of stress on the team, one of them was pulled off the project and reassigned.
A good year later, just the two of them were assigned to a new smallish, but interesting in-house project.</description>
    </item>
    
    <item>
      <title>Tests as part of your code</title>
      <link>http://localhost:1313/2014/03/tests-as-part-of-your-code.html</link>
      <pubDate>Sun, 09 Mar 2014 18:13:00 +0100</pubDate>
      
      <guid>http://localhost:1313/2014/03/tests-as-part-of-your-code.html</guid>
      <description>In the last project I worked on - processing financial batches - we put a lot of effort in avoiding being silently wrong. The practice that contributed most was being religious about avoiding structures to ever be in an invalid state. Preconditions, invariants, value objects and immutability were key.
One of the things we had to do with these structures was writing them to disk in a specific banking format; all the accounts with their transactions for a specific day.</description>
    </item>
    
    <item>
      <title>new YearPassed(2013);</title>
      <link>http://localhost:1313/2014/01/new-yearpassed2013.html</link>
      <pubDate>Sun, 19 Jan 2014 17:54:00 +0100</pubDate>
      
      <guid>http://localhost:1313/2014/01/new-yearpassed2013.html</guid>
      <description>I normally write this up at the end of the year, but circumstances made me push back this post for a few weeks. I use this annual post to look back at the year passed, and to look ahead to the year to come. I gave up on making resolutions in 2011. This year, I&amp;rsquo;m going to be naively ambitious again going into 2014.
Compared to previous years, I feel more confident that I have a pretty good idea of what I want next.</description>
    </item>
    
    <item>
      <title>Command and event semantics</title>
      <link>http://localhost:1313/2014/01/command-and-event-semantics.html</link>
      <pubDate>Sun, 05 Jan 2014 18:12:00 +0100</pubDate>
      
      <guid>http://localhost:1313/2014/01/command-and-event-semantics.html</guid>
      <description>Yesterday, I read this blog post by Michael Feathers. In the post he goes over a pain point he has often found himself struggling with while breaking down a large method; conditional statements. if (alarmEnabled) { var alarm = new Alarm(); ... alarm.Sound(); } Should we extract the if and the associated block into a new method, or just the content of the block? Is the condition too important to hide in a method?</description>
    </item>
    
  </channel>
</rss>